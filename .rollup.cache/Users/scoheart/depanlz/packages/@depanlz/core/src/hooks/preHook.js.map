{"version":3,"file":"preHook.js","sourceRoot":"","sources":["preHook.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAGxC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAC/C,MAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACnD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;AACpD,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC7C,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;AAElD,SAAS,oBAAoB;IACzB,IAAI,YAAY,CAAC,YAAY,CAAC,EAAE;QAC5B,OAAO,KAAK,CAAC;KAChB;SAAM,IAAI,YAAY,CAAC,aAAa,CAAC,EAAE;QACpC,OAAO,MAAM,CAAC;KACjB;SAAM,IAAI,YAAY,CAAC,aAAa,CAAC,EAAE;QACpC,OAAO,MAAM,CAAC;KACjB;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAED,SAAS,OAAO,CAAC,KAAa;IAC1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,0BAA0B,CAAC,CAAC;KACpE;IAED,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC/C;IAED,MAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;IAE3C,IAAI,CAAC,WAAW,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;KACrC;IAED,MAAM,MAAM,GAAW;QACnB,YAAY;QACZ,gBAAgB;QAChB,WAAW;QACX,KAAK;KACR,CAAC;IAEF,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,eAAe,OAAO,CAAC","sourcesContent":["/**\n * preHook 钩子进行预检处理\n * 1. 检查是否从项目根目录启动（是否含有package.json文件）\n * 2. 检查是否已经下载完成依赖（是否含有node_modules目录）\n * 3. 检查使用的包管理器是什么（所含有的lock文件是什么类型）\n *\n * 返回package.json node_modules的绝对目录，以及包管理器名称\n */\nimport { join } from \"path\";\nimport { isFileExists } from \"../utils\";\nimport { Config } from \"../../index\";\n\nconst CWD = process.cwd();\nconst PKG_JSON_DIR = join(CWD, \"package.json\");\nconst NODE_MODULES_DIR = join(CWD, \"node_modules\");\nconst NPM_LOCK_DIR = join(CWD, \"package-lock.json\");\nconst YARN_LOCK_DIR = join(CWD, \"yarn.lock\");\nconst PNPM_LOCK_DIR = join(CWD, \"pnpm-lock.yaml\");\n\nfunction detectPackageManager(): string {\n    if (isFileExists(NPM_LOCK_DIR)) {\n        return \"npm\";\n    } else if (isFileExists(YARN_LOCK_DIR)) {\n        return \"yarn\";\n    } else if (isFileExists(PNPM_LOCK_DIR)) {\n        return \"pnpm\";\n    }\n    return \"\";\n}\n\nfunction preHook(DEPTH: number): Config {\n    if (!isFileExists(PKG_JSON_DIR)) {\n        throw new Error(`\\x1b[31m当前工作目录为${CWD},没有发现package.json\\x1b[0m`);\n    }\n\n    if (!isFileExists(NODE_MODULES_DIR)) {\n        throw new Error(\"not contain node_modules\");\n    }\n\n    const PKG_MANAGER = detectPackageManager();\n\n    if (!PKG_MANAGER) {\n        throw new Error(\"lock file lose\");\n    }\n\n    const config: Config = {\n        PKG_JSON_DIR,\n        NODE_MODULES_DIR,\n        PKG_MANAGER,\n        DEPTH\n    };\n\n    return config;\n}\n\nexport default preHook;\n"]}