{"version":3,"file":"transformGraph.js","sourceRoot":"","sources":["transformGraph.ts"],"names":[],"mappings":"AASA,SAAS,YAAY,CAAC,KAAqB,EAAE,EAAU;IACnD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAS,EAAE,KAAqB,EAAE,KAAoB;IAC/E,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IAChE,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IACxH,OAAO;QACH,IAAI,EAAE,IAAI,CAAC,UAAU;QACrB,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,YAAY,EAAE,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY;KAChE,CAAC;AACN,CAAC;AAED,SAAS,cAAc,CAAC,QAAkB;IACtC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;IAClC,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,SAAS,WAAW,CAAC,QAAkB;IACnC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;IAClC,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAO,mBAAmB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,EACH,WAAW,EACX,cAAc,EACjB,CAAC","sourcesContent":["import { DepGraph, DepNode, DepRel } from \"@depche/core\";\n\ntype DependenciesTree = {\n    name: string,\n    version: string,\n    depth: number,\n    dependencies: DependenciesTree[] | null;\n}\n\nfunction findNodeById(nodes: Array<DepNode>, id: string) {\n    return nodes.find(node => node.id === id);\n}\n\nfunction buildDependencyTree(node: any, nodes: Array<DepNode>, edges: Array<DepRel>,): DependenciesTree {\n    const relations = edges.filter(edge => edge.source === node.id);\n    const dependencies = relations.map(relation => buildDependencyTree(findNodeById(nodes, relation.target), nodes, edges));\n    return {\n        name: node.dependence,\n        version: node.version,\n        depth: node.level,\n        dependencies: dependencies.length === 0 ? null : dependencies\n    };\n}\n\nfunction stringifyGraph(depGraph: DepGraph) {\n    const { nodes, edges } = depGraph;\n    const rootNode = nodes[0];\n    return JSON.stringify(buildDependencyTree(rootNode, nodes, edges));\n}\n\nfunction ObjifyGraph(depGraph: DepGraph) {\n    const { nodes, edges } = depGraph;\n    const rootNode = nodes[0];\n    return buildDependencyTree(rootNode, nodes, edges);\n}\n\nexport {\n    ObjifyGraph,\n    stringifyGraph\n};\n\n"]}