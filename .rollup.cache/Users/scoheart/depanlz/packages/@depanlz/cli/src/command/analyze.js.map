{"version":3,"file":"analyze.js","sourceRoot":"","sources":["analyze.ts"],"names":[],"mappings":"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","sourcesContent":["import { join } from 'path';\nimport { DepAnlz } from '@depche/core';\nimport analyzeConsole from '../console/analyzeConsole';\nimport { stringifyGraph, ObjifyGraph } from './transformGraph';\nimport { writeFileSync } from 'fs';\nimport { success } from '../console/colorConsole';\n\nfunction analyze(argument: Array<string>) {\n\n    /**\n     * depanlz analyze -h\n     * depanlz analyze --help\n     */\n    const help = argument[0];\n    if (help === \"-h\" || help === \"--help\") {\n        analyzeConsole();\n        return;\n    }\n\n    /**\n     * depanlz analyze -d\n     * depanlz analyze --depth\n     */\n    let depth = 3;\n    const dIndex: number = argument.indexOf(\"-d\");\n    const depthIndex: number = argument.indexOf(\"--depth\");\n\n    if (dIndex !== -1) {\n        const depthNumber: number = parseInt(argument[dIndex + 1]);\n        depth = isNaN(depthNumber) ? depth : depthNumber;\n    } else if (depthIndex !== -1) {\n        const depthNumber: number = parseInt(argument[depthIndex + 1]);\n        depth = isNaN(depthNumber) ? depth : depthNumber;\n    }\n\n    /**\n     * depanlz analyze -j\n     * depanlz analyze --json\n     */\n    const cwd = process.cwd();\n    let filePath = join(cwd, \"depGraph.json\");\n    const jsonFlag = argument.includes(\"--json\") || argument.includes(\"-j\");\n    const jIndex = argument.indexOf(\"-j\");\n    const jsonIndex = argument.indexOf(\"--json\");\n\n    if (jIndex !== -1) {\n        let fileName = argument[jIndex + 1];\n        if (fileName === undefined) {\n            fileName = String(\"-\" + fileName);\n        }\n        filePath = fileName.startsWith(\"-\") ? filePath : join(cwd, fileName);\n    } else if (jsonIndex !== -1) {\n        let fileName: string = argument[jsonIndex + 1];\n        if (fileName === undefined) {\n            fileName = String(\"-\" + fileName);\n        }\n        filePath = fileName.startsWith(\"-\") ? filePath : join(cwd, fileName);\n    }\n\n    /**\n     * depanlz analyze -w\n     * depanlz analyze --web\n     */\n    let PORT = 3000;\n    const webFlag = argument.includes(\"-w\") || argument.includes(\"--web\");\n    const wIndex: number = argument.indexOf(\"-w\");\n    const webthIndex: number = argument.indexOf(\"--web\");\n\n    if (wIndex !== -1) {\n        const port: number = parseInt(argument[wIndex + 1]);\n        PORT = isNaN(port) ? PORT : port;\n    } else if (webthIndex !== -1) {\n        const port: number = parseInt(argument[webthIndex + 1]);\n        PORT = isNaN(port) ? PORT : port;\n    }\n\n    const depanlz = new DepAnlz(depth);\n    const depGraph = depanlz.lifeCycle();\n\n    if (jsonFlag && !webFlag) {\n        const json = stringifyGraph(depGraph);\n        writeFileSync(filePath, json);\n        success(`Dependency analysis file are created in\n        ${filePath}`);\n    } else if (webFlag && !jsonFlag) {\n        import(\"@depche/web-server\").then(module => {\n            const { webServer } = module;\n            webServer.prototype.PORT = PORT;\n            depanlz.postHook(webServer);\n        });\n    } else if (jsonFlag && webFlag) {\n        const json = stringifyGraph(depGraph);\n        writeFileSync(filePath, json);\n        success(`Dependency analysis file are created in\n        ${filePath}\\n`);\n        import(\"@depche/web-server\").then(module => {\n            const { webServer } = module;\n            webServer.prototype.PORT = PORT;\n            depanlz.postHook(webServer);\n        });\n    } else {\n        const obj = ObjifyGraph(depGraph);\n        console.log(obj);\n    }\n\n}\n\nexport {\n    analyze\n};\n"]}