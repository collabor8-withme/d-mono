{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as http from \"http\";\nimport { Config, DepGraph } from \"../index\";\nimport { exec } from \"child_process\";\n\nfunction webServer(config: Config, depGraph: DepGraph): any {\n    const depthType = [\n        { name: 'depth1', color: '#ff6e76', symbolSize: 200 },\n        { name: 'depth2', color: '#4992ff', symbolSize: 120 },\n        { name: 'depth3', color: '#7cffb2', symbolSize: 80 },\n        { name: 'depth4', color: '#8d48e3', symbolSize: 50 },\n        { name: 'depth5', color: '#58d9f9', symbolSize: 30 },\n        { name: 'depth6', color: '#05c091', symbolSize: 25 },\n        { name: 'depth7', color: '#ff8a45', symbolSize: 15 },\n        { name: 'depth8', color: '#ff8a45', symbolSize: 5 },\n    ];\n\n    const option = {\n        title: {\n            text: \"DepAnlz - @depanlz/web-server\",\n            left: \"center\",\n            textStyle: {\n                color: \"white\"\n            }\n        },\n        tooltip: {\n            trigger: \"item\"\n        },\n        color: ['#ff6e76', '#4992ff', '#7cffb2', '#8d48e3', '#58d9f9', '#05c091', '#ff8a45', '#f88a45'],\n        legend: {\n            right: 0,\n            orient: 'vertical',\n            textStyle: {\n                color: \"white\"\n            },\n            padding: 20,\n            itemWidth: 30,\n            itemHeight: 15,\n            data: [\"depth1\", \"depth2\", \"depth3\", \"depth4\", \"depth5\", \"depth6\", \"depth7\", \"depth8\"]\n        },\n        darkMode: true,\n        backgroundColor: \"#100C2A\",\n        series: [\n            {\n                type: 'graph',\n                layout: 'force',\n                force: {\n                    edgeLength: 300,\n                    repulsion: 4000,\n                    gravity: 0.1\n                },\n                draggable: true,\n                roam: true,\n                edgeSymbol: [\"none\", \"arrow\"],\n                edgeSymbolSize: [4, 10],\n                label: {\n                    show: true,\n                    color: \"#fff\",\n                    formatter: \"{b}\"\n                },\n                emphasis: {\n                    focus: 'adjacency',\n                    label: {\n                        position: 'right',\n                        show: true\n                    }\n                },\n                lineStyle: {\n                    color: \"source\",\n                    width: 0.5,\n                    curveness: 0.1,\n                    opacity: 0.7\n                },\n                categories: depthType.slice(0, config.DEPTH),\n                nodes: depGraph.nodes.map(node => {\n                    return {\n                        ...node,\n                        name: node.id,\n                        category: node.level,\n                        symbolSize: depthType[node.level].symbolSize,\n                        itemStyle: { color: depthType[node.level].color }\n                    };\n                }),\n                edges: depGraph.edges,\n            }\n        ]\n    };\n\n    const str = JSON.stringify(option, null, 2);\n    const PORT = webServer.prototype.PORT;\n    http.createServer((req, res) => {\n\n        const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<style>\nhtml, body {\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n}\n\n#container {\n    width: 100%;\n    height: 100%;\n}\n</style>\n<body>\n    <div id=\"container\"></div>\n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js\"></script>\n    <script>\n                const myChart = echarts.init(document.getElementById('container'));\n                myChart.showLoading();\n                myChart.hideLoading();\n                const option = ${str}\n                myChart.setOption(option);\n                console.log(echarts)\n    </script>\n</body>\n</html>\n            `;\n        res.end(html);\n    }).listen(PORT, () => {\n        console.log(`The dependency graph is rendered in http://localhost:${PORT}`);\n        // 在 Unix-like 系统中，使用 open 命令\n        if (process.platform === 'darwin') {\n            exec(`open http://localhost:${PORT}`);\n        }\n        // 在 Windows 系统中，使用 start 命令\n        else if (process.platform === 'win32') {\n            exec(`start http://localhost:${PORT}`);\n        }\n        // 在 Linux 等系统中，可以使用 xdg-open 命令\n        else {\n            exec(`xdg-open http://localhost:${PORT}`);\n        }\n    });\n}\n\nexport {\n    webServer\n};\n\n\n\n"]}